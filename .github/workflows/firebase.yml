# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Firebase CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
       
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
      env:
        # CI: false
        REACT_APP_APIKEY: ${{ secrets.REACT_APP_APIKEY_APP }}
        REACT_APP_AUTHDOMAIN: ${{ secrets.REACT_APP_AUTHDOMAIN_APP }}
        REACT_APP_PROJECTID: ${{ secrets.REACT_APP_PROJECTID_APP }}
        REACT_APP_STORAGEBUCKET: ${{ secrets.REACT_APP_STORAGEBUCKET_APP }}
        REACT_APP_MESSAGINGSENDETID: ${{secrets.REACT_APP_MESSAGINGSENDETID_APP }}
        REACT_APP_APPID: ${{ secrets.REACT_APP_APPID_APP }}
        REACT_APP_MEASUREMENTID: ${{ secrets.REACT_APP_MEASUREMENTID_APP }}
        REACT_APP_USER: ${{ secrets.REACT_APP_USER_APP }} 
        
    - name: Install 
      run: npm install
    - name: Build
      run: npm run build
      #run: REACT_APP_APIKEY=${{secrets.REACT_APP_APIKEY_APP}} 
      #     REACT_APP_AUTHDOMAIN=${{ secrets.REACT_APP_AUTHDOMAIN_APP}}
      #     REACT_APP_PROJECTID=${{ secrets.REACT_APP_PROJECTID_APP}}
      #     REACT_APP_STORAGEBUCKET=${{secrets.REACT_APP_STORAGEBUCKET_APP}}
      #     REACT_APP_MESSAGINGSENDETID=${{secrets.REACT_APP_MESSAGINGSENDETID_APP}} 
      #     REACT_APP_APPID=${{secrets.REACT_APP_APPID_APP}} 
      #     REACT_APP_MEASUREMENTID=${{secrets.REACT_APP_MEASUREMENTID_APP}} 
      #     REACT_APP_USER=${{secrets.REACT_APP_USER_APP}} npm run build 
    #- name: Test
    #  run: npm test
    - name: Archive Build
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: build
      
  deploy:
    name: deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build        
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env: 
          FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
